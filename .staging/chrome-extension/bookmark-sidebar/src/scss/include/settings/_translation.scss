div.tab[data-name='language'] > div[data-name='translate'] {

  > div {
    display: none;

    &.visible {
      display: block;
    }
  }

  > div.overview {

    div.box {
      cursor: pointer;

      > select {
        margin: 0;
      }

      > div.progress {
        position: relative;
        width: 200px;
        height: 3px;
        margin: 15px 0 0 0;
        background: rgba(0, 0, 0, 0.1);

        > div {
          position: absolute;
          top: 0;
          left: 0;
          width: auto;
          height: 100%;
          background: $mainColor;
        }

        &::before {
          content: attr(data-value);
          position: absolute;
          top: -5px;
          right: -50px;
          width: 50px;
          padding: 0 0 0 3px;
          font-size: 80%;
          color: $textColorLight;
        }
      }

      > span {
        display: block;
        position: absolute;
        top: calc(50% - 10px);
        right: 20px;
        width: 20px;
        height: 20px;
        cursor: help;
      }

      &[data-status='released'] > span {
        @include mask('icon-check', $colorSuccess, 24px);
      }

      &[data-status='incomplete'] > span {
        @include mask('icon-check', $colorNotice, 22px);
      }

      &[data-status='draft'] > span {
        @include mask('icon-close', $colorError, 24px);
      }

      &.mark {

        > strong {
          color: $textColorInverted;
          padding: 3px 7px 4px;
        }

        &[data-status='released'] > strong {
          background: $colorSuccess;
        }

        &[data-status='draft'] > strong {
          background: $colorError;
        }

        &[data-status='incomplete'] > strong {
          background: $colorNotice;
        }
      }
    }
  }

  > div.langvars {

    &.loading {

      > div.notice {
        display: none;
      }
    }

    > svg.loading {
      position: absolute;
      top: 30%;
      left: calc(50% - 18px);
    }

    div.box {
      cursor: pointer;

      > a {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 2;
      }

      > strong {
        display: inline-block;
        vertical-align: top;
        font-weight: $__fontWeightMedium;
        color: $mainColorAlt;
        font-size: 120%;
      }

      > span.amountInfo {
        position: relative;
        display: block;
        float: right;
        margin: 2px 0 0 0;
        color: $textColorLight;
      }

      > span.requiredInfo {
        display: inline-block;
        font-size: 80%;
        margin: 4px 0 0 10px;
        color: $textColorLight;
      }

      &.incomplete {

        > span.amountInfo > span {
          color: $textColorInverted;
          background: $colorError;
          font-weight: $__fontWeightMedium;
          padding: 0 3px;
          font-size: 90%;
        }
      }

      > ul {
        display: none;
      }
    }
  }

  > div.category {
    padding: 0 !important;

    > header {
      position: sticky;
      top: -35px;
      background: $contentBackground;
      box-shadow: 0 5px 7px -2px rgba(0, 0, 0, 0.1);
      padding: 12px 20px;

      > span.amountInfo {
        float: right;
        margin-right: 15px;
      }

      > a {
        position: relative;
        cursor: pointer;

        &.back {
          padding: 5px 5px 5px 17px;

          &::before {
            content: "";
            position: absolute;
            top: 8px;
            left: 0;
            width: 10px;
            height: 10px;
            border-top: 2px solid $textColorLight;
            border-left: 2px solid $textColorLight;
            transform: rotateZ(-45deg);
          }
        }

        &.goto {
          float: right;
          display: inline-block;
          width: 26px;
          height: 26px;
          border-radius: 50%;
          margin: -5px 0 0 3px;
          transition: background 0.5s;

          &:hover {
            background: $hoverBackground;
          }

          &::after {
            content: "";
            position: absolute;
            top: 0;
            left: 8px;
            display: block;
            border-top: 3px solid $textColorLight;
            border-right: 3px solid $textColorLight;
            width: 10px;
            height: 10px;
          }

          &[data-value='up']::after {
            transform: rotateZ(-45deg);
            top: 10px;
          }

          &[data-value='down']::after {
            transform: rotateZ(135deg);
            top: 6px;
          }
        }
      }
    }

    &.incomplete {

      > header {
        @include mask('icon-info', $colorNotice, 24px);

        &::before {
          left: auto;
          right: 80px;
          width: 24px;
        }
      }
    }

    > ul {
      margin-top: 15px;

      > li {
        display: flex;
        flex-flow: row wrap;
        justify-content: space-between;
        padding: 10px 0;
        transition: background 0.5s;
        border-top: 1px solid rgba(0, 0, 0, 0.1);

        &:first-child {
          border: none;
        }

        > div {
          width: 40%;
          padding: 0 20px;

          > label {
            padding: 0 0 5px 0;
          }

          > span {
            display: block;
            font-size: 80%;
            font-style: italic;
            user-select: auto;
            padding: 5px;
            transition: background 0.5s;

            > span {
              display: block;
              font-weight: $__fontWeightMedium;
              font-style: normal;
              margin-bottom: 3px;
              user-select: none;
            }
          }

          > textarea {
            height: 70px;
            margin: 0;
            line-height: 150%;
            resize: none;
            overflow: hidden;
            transition: box-shadow 0.5s, background 0.5s;
          }

          + div {
            width: 60%;
          }
        }

        > span.desc {
          display: none;
        }

        &:hover, &.hover {
          background: $hoverBackground;

          > div > textarea {
            background: rgba($contentBackground, 0.5);
          }
        }

        &.hover > div {

          > textarea {
            box-shadow: 0 0 10px rgba($mainColorAlt, 0.2);
          }

          > span {
            background: rgba($mainColor, 0.2);
          }
        }

        &.mark {

          > div > span {
            background: rgba($colorNotice, 0.5);
          }

          > span.desc {
            position: relative;
            display: block;
            margin: 10px 20px 10px;
            padding: 7px 10px;
            font-size: 90%;
            line-height: 150%;
            background: $mainColor;
            color: $textColorInverted;

            &::before {
              content: "";
              position: absolute;
              top: -20px;
              left: 10px;
              border: 10px solid transparent;
              border-bottom-color: $mainColor;
            }
          }
        }
      }
    }
  }
}